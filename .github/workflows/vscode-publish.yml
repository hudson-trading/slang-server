on:
  workflow_dispatch:
    inputs:
      kind:
        description: 'Update kind (major, minor, patch)'
        default: 'patch'
      prerelease:
        description: 'Publish as pre-release'
        type: boolean
        default: false

name: Publish extension to marketplace
permissions:
  contents: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          cache-dependency-path: 'clients/vscode/pnpm-lock.yaml'
      - name: Install dependencies
        working-directory: clients/vscode
        run: pnpm install --frozen-lockfile
      - name: Install vsce
        run: pnpm install -g @vscode/vsce
      - name: Configure git
        run: |
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git config --global user.name "${{ github.actor }}"
      - name: Publish to Visual Studio Marketplace
        working-directory: clients/vscode
        run: vsce publish ${{ inputs.kind }} ${{ inputs.prerelease && '--pre-release' || '' }} --no-dependencies --pat ${{ secrets.VS_MARKETPLACE_TOKEN }}
      # - name: Install ovsx
      #   run: pnpm install -g ovsx
      # - name: Publish to Open Vsix
      #   working-directory: clients/vscode
      #   run: npx ovsx publish ${{ inputs.prerelease && '--pre-release' || '' }} --pat ${{ secrets.OPEN_VSX_TOKEN }}
      - name: Commit and push version bump
        run: |
          git add clients/vscode/package.json
          git commit -m "Published vscode extension version $(jq -r .version clients/vscode/package.json)"
          git push
      - name: Create git tag for major/minor releases
        if: inputs.kind == 'major' || inputs.kind == 'minor'
        run: |
          VERSION=$(jq -r .version clients/vscode/package.json)
          git tag -a "v${VERSION}" -m "Release v${VERSION}"
          git push origin "v${VERSION}"
