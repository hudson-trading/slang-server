[
  {
    "after_print_result": [
      {
        "label": "my_point",
        "labelDetails": {
          "detail": " point_t"
        },
        "kind": "Variable",
        "filterText": "my_point"
      },
      {
        "label": "op",
        "labelDetails": {
          "detail": " operation_t"
        },
        "kind": "Variable",
        "filterText": "op"
      },
      {
        "label": "data",
        "labelDetails": {
          "detail": " byte_t"
        },
        "kind": "Variable",
        "filterText": "data"
      },
      {
        "label": "result",
        "labelDetails": {
          "detail": " real"
        },
        "kind": "Variable",
        "filterText": "result"
      },
      {
        "label": "max_val",
        "labelDetails": {
          "detail": " int"
        },
        "kind": "Variable",
        "filterText": "max_val"
      },
      {
        "label": "PI_VALUE",
        "labelDetails": {
          "detail": " int",
          "description": "math_pkg"
        },
        "kind": "TypeParameter",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\nparameter int PI_VALUE = 314\n````"
        },
        "filterText": "PI_VALUE"
      },
      {
        "label": "E_VALUE",
        "labelDetails": {
          "detail": " int",
          "description": "math_pkg"
        },
        "kind": "TypeParameter",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\nparameter int E_VALUE = 271\n````"
        },
        "filterText": "E_VALUE"
      },
      {
        "label": "point_t",
        "labelDetails": {
          "detail": " UnpackedStructType",
          "description": "math_pkg"
        },
        "kind": "Struct",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\ntypedef struct {\n    real x;\n    real y;\n} point_t;\n````"
        },
        "filterText": "point_t"
      },
      {
        "label": "ADD",
        "labelDetails": {
          "detail": " EnumValue",
          "description": "math_pkg::operation_t"
        },
        "kind": "EnumMember",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\ntypedef enum {\n    ADD,\n    SUBTRACT,\n    MULTIPLY\n} operation_t;\n````"
        },
        "filterText": "ADD"
      },
      {
        "label": "SUBTRACT",
        "labelDetails": {
          "detail": " EnumValue",
          "description": "math_pkg::operation_t"
        },
        "kind": "EnumMember",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\ntypedef enum {\n    ADD,\n    SUBTRACT,\n    MULTIPLY\n} operation_t;\n````"
        },
        "filterText": "SUBTRACT"
      },
      {
        "label": "MULTIPLY",
        "labelDetails": {
          "detail": " EnumValue",
          "description": "math_pkg::operation_t"
        },
        "kind": "EnumMember",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\ntypedef enum {\n    ADD,\n    SUBTRACT,\n    MULTIPLY\n} operation_t;\n````"
        },
        "filterText": "MULTIPLY"
      },
      {
        "label": "operation_t",
        "labelDetails": {
          "detail": " EnumType",
          "description": "math_pkg"
        },
        "kind": "Enum",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\ntypedef enum {\n    ADD,\n    SUBTRACT,\n    MULTIPLY\n} operation_t;\n````"
        },
        "filterText": "operation_t"
      },
      {
        "label": "calculate",
        "labelDetails": {
          "detail": " function",
          "description": "math_pkg"
        },
        "kind": "Function",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\nfunction real calculate(real a, real b, operation_t op);\n    case (op)\n        ADD: return a + b;\n        SUBTRACT: return a - b;\n        MULTIPLY: return a * b;\n        default: return 0.0;\n    endcase\nendfunction\n````"
        },
        "filterText": "calculate"
      },
      {
        "label": "print_result",
        "labelDetails": {
          "detail": " task",
          "description": "math_pkg"
        },
        "kind": "Function",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\ntask print_result(real value);\n    $display(\"Result: %f\", value);\nendtask\n````"
        },
        "filterText": "print_result"
      },
      {
        "label": "MAX_SIZE",
        "labelDetails": {
          "detail": " int",
          "description": "utils_pkg"
        },
        "kind": "TypeParameter",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\nparameter int MAX_SIZE = 1024\n````"
        },
        "filterText": "MAX_SIZE"
      },
      {
        "label": "byte_t",
        "labelDetails": {
          "detail": " PackedArrayType",
          "description": "utils_pkg"
        },
        "kind": "Struct",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\ntypedef logic [7:0] byte_t;\n````"
        },
        "filterText": "byte_t"
      },
      {
        "label": "find_max",
        "labelDetails": {
          "detail": " function",
          "description": "utils_pkg"
        },
        "kind": "Function",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\nfunction int find_max(int array[], int size);\n    int max_val = array[0];\n    for (int i = 1; i < size; i++) begin\n        if (array[i] > max_val)\n            max_val = array[i];\n    end\n    return max_val;\nendfunction\n````"
        },
        "filterText": "find_max"
      },
      {
        "label": "base_pkg",
        "labelDetails": {
          "detail": " Package"
        },
        "kind": "Module",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\npackage base_pkg;\n````"
        },
        "filterText": "base_pkg",
        "insertText": "base_pkg",
        "insertTextFormat": "PlainText"
      },
      {
        "label": "util_pkg",
        "labelDetails": {
          "detail": " Package"
        },
        "kind": "Module",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\npackage util_pkg;\n````"
        },
        "filterText": "util_pkg",
        "insertText": "util_pkg",
        "insertTextFormat": "PlainText"
      }
    ]
  },
  {
    "lhs_completion": [
      {
        "label": "point_t",
        "labelDetails": {
          "detail": " UnpackedStructType",
          "description": "math_pkg"
        },
        "kind": "Struct",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\ntypedef struct {\n    real x;\n    real y;\n} point_t;\n````"
        },
        "filterText": "point_t"
      },
      {
        "label": "operation_t",
        "labelDetails": {
          "detail": " EnumType",
          "description": "math_pkg"
        },
        "kind": "Enum",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\ntypedef enum {\n    ADD,\n    SUBTRACT,\n    MULTIPLY\n} operation_t;\n````"
        },
        "filterText": "operation_t"
      },
      {
        "label": "byte_t",
        "labelDetails": {
          "detail": " PackedArrayType",
          "description": "utils_pkg"
        },
        "kind": "Struct",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\ntypedef logic [7:0] byte_t;\n````"
        },
        "filterText": "byte_t"
      },
      {
        "label": "Dut",
        "labelDetails": {
          "detail": " Module"
        },
        "kind": "Module",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\nmodule Dut  #(\n    parameter int a = 0,\n    parameter int b = 1\n) (\n    input logic foo\n);\n````"
        },
        "filterText": "Dut",
        "insertText": "Dut #(\n    .a(${1:a /* default 0 */}),\n    .b(${2:b /* default 1 */})\n ) ${3:dut} (\n    .foo(${4:foo})\n);",
        "insertTextFormat": "Snippet"
      },
      {
        "label": "base_pkg",
        "labelDetails": {
          "detail": " Package"
        },
        "kind": "Module",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\npackage base_pkg;\n````"
        },
        "filterText": "base_pkg",
        "insertText": "base_pkg",
        "insertTextFormat": "PlainText"
      },
      {
        "label": "cycle_test_module",
        "labelDetails": {
          "detail": " Module"
        },
        "kind": "Module",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\nmodule cycle_test_module;\n````"
        },
        "filterText": "cycle_test_module",
        "insertText": "cycle_test_module #(\n) ${1:cycle_test_module} (\n);",
        "insertTextFormat": "Snippet"
      },
      {
        "label": "tb",
        "labelDetails": {
          "detail": " Module"
        },
        "kind": "Module",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\nmodule tb;\n````"
        },
        "filterText": "tb",
        "insertText": "tb #(\n) ${1:tb} (\n);",
        "insertTextFormat": "Snippet"
      },
      {
        "label": "util_pkg",
        "labelDetails": {
          "detail": " Package"
        },
        "kind": "Module",
        "documentation": {
          "kind": "markdown",
          "value": "````systemverilog\npackage util_pkg;\n````"
        },
        "filterText": "util_pkg",
        "insertText": "util_pkg",
        "insertTextFormat": "PlainText"
      }
    ]
  }
]
